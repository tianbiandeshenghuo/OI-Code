#include<bits/stdc++.h>

using namespace std;
const int MAXN = 1e5 + 5;
int n, m, a[MAXN];
bool b[MAXN] = {0};
void Solve(){
  for (int i = 0; i <= n; i++){
    b[i] = 0;
  }
  cin >> n >> m;
  for (int i = 1; i <= n; i++){
    cin >> a[i];
    b[a[i]] = 1;
  }
  int mex = 0, p;
  for (int i = 0; i <= n; i++){
    if (!b[i]){
      mex = i;
      break;
    }
  }
  a[n + 1] = mex;
  m = (1ll * n * m) % (n + 1);
  for (int i = m; i < m + n; i++){
    cout << a[i % (n + 1) + 1] << ' ';
  }
  cout << '\n';
}
int main(){
  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
  int t;
  cin >> t;
  while (t--){
    Solve();
  }
  return 0;
}

/*
0
3
1
1
10
*/

/*
3 2
0 1 3
1:
2 0 1
2:
3 0 1
3 2 1
3 2 0
3:
2 0 1
2 3 1
2 3 0
4:
1 3 0
1 2 0
1 2 3
5:
0 2 3
0 1 3
0 1 2
6:
3 1 2
3 0 2
3 0 1
7:
2 0 1
2 3 1
2 3 0
8:
1 3 0
1 2 0
1 2 3
*/
/*
0
0
1
1
0

2
2 0 1
3

1
1 0
2
2 1
0

0
0 1 2 3 4
5
5 0 1 2 3
4
4 5 0 1 2
3
3 4 5 0 1
2
2 3 4 5 0
1

7
7 5 3 0 4 2 1 6 9 10
8
8 7 5 3 0 4 2 1 6 9
10
10 8 7 5 3 0 4 2 1 6
9
9 10 8 7 5 3 0 4 2 1
6
6 9 10 8 7 5 3 0 4 2
1
1 6 9 10 8 7 5 3 0 4
2
2 1 6 9 10 8 7 5 3 0
4
4 2 1 6 9 10 8 7 5 3
0
0 4 2 1 6 9 10 8 7 5
3
3 0 4 2 1 6 9 10 8 7
5
5 3 0 4 2 1 6 9 10 8
7
7 5 3 0 4 2 1 6 9 10
8
8 7 5 3 0 4 2 1 6 9
10
10 8 7 5 3 0 4 2 1 6
9
9 10 8 7 5 3 0 4 2 1
6
6 9 10 8 7 5 3 0 4 2
1
1 6 9 10 8 7 5 3 0 4
2
2 1 6 9 10 8 7 5 3 0
4
4 2 1 6 9 10 8 7 5 3
0
0 4 2 1 6 9 10 8 7 5
3
3 0 4 2 1 6 9 10 8 7
5
5 3 0 4 2 1 6 9 10 8
7
7 5 3 0 4 2 1 6 9 10
8
8 7 5 3 0 4 2 1 6 9
10
10 8 7 5 3 0 4 2 1 6
9
9 10 8 7 5 3 0 4 2 1
6
6 9 10 8 7 5 3 0 4 2
1
1 6 9 10 8 7 5 3 0 4
2
2 1 6 9 10 8 7 5 3 0
4
4 2 1 6 9 10 8 7 5 3
0
0 4 2 1 6 9 10 8 7 5
3
3 0 4 2 1 6 9 10 8 7
5
5 3 0 4 2 1 6 9 10 8
7
7 5 3 0 4 2 1 6 9 10
8
8 7 5 3 0 4 2 1 6 9
10
10 8 7 5 3 0 4 2 1 6
9
9 10 8 7 5 3 0 4 2 1
6
6 9 10 8 7 5 3 0 4 2
1
1 6 9 10 8 7 5 3 0 4
2
2 1 6 9 10 8 7 5 3 0
4
4 2 1 6 9 10 8 7 5 3
0
0 4 2 1 6 9 10 8 7 5
3
3 0 4 2 1 6 9 10 8 7
5
5 3 0 4 2 1 6 9 10 8
7
7 5 3 0 4 2 1 6 9 10
8
8 7 5 3 0 4 2 1 6 9
10
10 8 7 5 3 0 4 2 1 6
9
9 10 8 7 5 3 0 4 2 1
6
6 9 10 8 7 5 3 0 4 2
1
1 6 9 10 8 7 5 3 0 4
2
2 1 6 9 10 8 7 5 3 0
4
4 2 1 6 9 10 8 7 5 3
0
0 4 2 1 6 9 10 8 7 5
3
3 0 4 2 1 6 9 10 8 7
5
5 3 0 4 2 1 6 9 10 8
7
7 5 3 0 4 2 1 6 9 10
8
8 7 5 3 0 4 2 1 6 9
10
10 8 7 5 3 0 4 2 1 6
9
9 10 8 7 5 3 0 4 2 1
6
6 9 10 8 7 5 3 0 4 2
1
1 6 9 10 8 7 5 3 0 4
2
2 1 6 9 10 8 7 5 3 0
4
4 2 1 6 9 10 8 7 5 3
0
0 4 2 1 6 9 10 8 7 5
3
3 0 4 2 1 6 9 10 8 7
5
5 3 0 4 2 1 6 9 10 8
7
7 5 3 0 4 2 1 6 9 10
8
8 7 5 3 0 4 2 1 6 9
10
10 8 7 5 3 0 4 2 1 6
9
9 10 8 7 5 3 0 4 2 1
6
6 9 10 8 7 5 3 0 4 2
1
1 6 9 10 8 7 5 3 0 4
2
2 1 6 9 10 8 7 5 3 0
4
4 2 1 6 9 10 8 7 5 3
0
0 4 2 1 6 9 10 8 7 5
3
3 0 4 2 1 6 9 10 8 7
5
5 3 0 4 2 1 6 9 10 8
7
7 5 3 0 4 2 1 6 9 10
8
8 7 5 3 0 4 2 1 6 9
10
10 8 7 5 3 0 4 2 1 6
9
9 10 8 7 5 3 0 4 2 1
6
6 9 10 8 7 5 3 0 4 2
1
1 6 9 10 8 7 5 3 0 4
2
2 1 6 9 10 8 7 5 3 0
4
4 2 1 6 9 10 8 7 5 3
0
0 4 2 1 6 9 10 8 7 5
3
3 0 4 2 1 6 9 10 8 7
5
5 3 0 4 2 1 6 9 10 8
7
7 5 3 0 4 2 1 6 9 10
8
8 7 5 3 0 4 2 1 6 9
10
10 8 7 5 3 0 4 2 1 6
9
9 10 8 7 5 3 0 4 2 1
6
6 9 10 8 7 5 3 0 4 2
1
1 6 9 10 8 7 5 3 0 4
2
2 1 6 9 10 8 7 5 3 0
4
4 2 1 6 9 10 8 7 5 3
0
0 4 2 1 6 9 10 8 7 5
3
3 0 4 2 1 6 9 10 8 7
5
5 3 0 4 2 1 6 9 10 8
7
7 5 3 0 4 2 1 6 9 10
8
*/